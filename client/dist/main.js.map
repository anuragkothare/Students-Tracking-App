{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/Student.ts","webpack:///./src/app/models/User.ts","webpack:///./src/app/student-form/student-form.component.css","webpack:///./src/app/student-form/student-form.component.html","webpack:///./src/app/student-form/student-form.component.ts","webpack:///./src/app/student-list/student-list.component.css","webpack:///./src/app/student-list/student-list.component.html","webpack:///./src/app/student-list/student-list.component.ts","webpack:///./src/app/student.service.ts","webpack:///./src/app/token.interceptor.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\nimport { ModuleWithProviders } from \"@angular/core\";\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { LoginComponent } from './login/login.component'\nimport { StudentFormComponent } from 'src/app/student-form/student-form.component';\nimport { UserFormComponent } from 'src/app/user-form/user-form.component';\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'admin-form', component: UserFormComponent},\n  {path: 'students', component: StudentListComponent },\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: StudentFormComponent},\n];\n\nexport const routingModule: ModuleWithProviders = RouterModule.forRoot(routes);","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './token.interceptor';\n\nimport { AppComponent } from './app.component';\nimport { StudentListComponent } from './student-list/student-list.component';\n\nimport {CommonModule} from '@angular/common';\nimport { FormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport {routingModule} from '../app/app-routing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClient } from 'selenium-webdriver/http';\nimport { LoginComponent } from './login/login.component';\nimport { StudentFormComponent } from './student-form/student-form.component';\nimport { UserFormComponent } from './user-form/user-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentListComponent,\n    LoginComponent,\n    StudentFormComponent,\n    UserFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CommonModule,\n    RouterModule.forRoot([]),\n    routingModule,\n    HttpModule,\n    HttpClientModule\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  public getToken(): string {\n    return localStorage.getItem('token')\n  }\n\n\n}\n","module.exports = \".login-form {\\n\\t\\twidth: 340px;\\n    \\tmargin: 50px auto;\\n\\t}\\n    .login-form form {\\n    \\tmargin-bottom: 15px;\\n        background: #f7f7f7;\\n        box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n        padding: 30px;\\n    }\\n    .login-form h2 {\\n        margin: 0 0 15px;\\n    }\\n    .form-control, .btn {\\n        min-height: 38px;\\n        border-radius: 2px;\\n    }\\n    .btn {\\n        font-size: 15px;\\n        font-weight: bold;\\n    }\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h3 style=\\\"text-align: center; font-family: 'Times New Roman', Times, serif\\\">Student Tracking App</h3>\\n</div>\\n<body>\\n<div class=\\\"login-form\\\">\\n    <form action=\\\"/examples/actions/confirmation.php\\\" method=\\\"post\\\">\\n        <h2 class=\\\"text-center\\\">Log in</h2>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"email\\\" required=\\\"required\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" #name=\\\"ngModel\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"required\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onSubmit()\\\">Log in</button>\\n        </div>\\n        <div class=\\\"clearfix\\\">\\n            <label class=\\\"pull-left checkbox-inline\\\"><input type=\\\"checkbox\\\"> Remember me</label>\\n        </div>\\n    </form>\\n    <button type=\\\"button\\\" href=\\\"\\\" (click)=\\\"createAccount()\\\" class=\\\"text-center\\\"><a >Create an Account</a></button>\\n\\n</div>\\n</body>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/User'\nimport { StudentService } from '../student.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public studentService: StudentService, public router: Router ) { }\n\n  ngOnInit() {\n  }\n\n  model = new User(\"\", \"\", \"\")\n  submitted = false\n  onSubmit() {\n    this.studentService.loginUser(this.model.email, this.model.password).subscribe(\n      (data:any) => {\n        console.log(data)\n        localStorage.setItem('token', data.token)\n        console.log('Login Successfull')\n        this.submitted = true\n        this.router.navigate(['/students']);\n      }\n    )\n  }\n\n  createAccount() {\n    this.router.navigate(['/admin-form']);\n  }\n\n}\n","export class Student {\n\n      constructor(public _id: String,public rollNumber: Number, public name: String, public standard: String, public age: Number) {\n        this._id = _id\n        this.name = name\n        this.standard = standard\n        this.age = age\n      }\n    }","export class User {\n\n    constructor(public name: String, public email: String, public password: String) {\n      this.name = name\n      this.email = email\n      this.password = password\n    }\n  }","module.exports = \"\"","module.exports = \"\\n<br>\\n<br>\\n<h2 style=\\\"text-align: center\\\">Register Student</h2>\\n<br>\\n<br>\\n\\n<div class=\\\"container\\\">\\n    <form>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"rollnumber\\\"><strong>Roll Number</strong>  </label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" id=roll required [(ngModel)]=\\\"model.rollNumber\\\" #name=\\\"ngModel\\\" name=\\\"rollNumber\\\" placeholder=\\\"Enter Roll Number\\\">\\n          </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\"> <strong>Name</strong>  </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"standard\\\"><strong>Standard</strong>  </label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=address [(ngModel)]=\\\"model.standard\\\" name=\\\"standard\\\" placeholder=\\\"Enter Standard\\\">\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"age\\\"><strong>Age</strong>  </label>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=age required [(ngModel)]=\\\"model.age\\\" #name=\\\"ngModel\\\" name=\\\"age\\\" placeholder=\\\"Enter Age\\\">\\n        </div>\\n\\n\\n\\n        <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </form>\\n\\n        <br>\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\n          <strong>{{errorMessage}}</strong>\\n      </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {StudentService} from '../student.service'\nimport { Student } from '../models/Student'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css']\n})\nexport class StudentFormComponent implements OnInit {\n\n  constructor(public studentService: StudentService, public router: Router) { }\n\n  errorMessage: String\n\n  ngOnInit() {\n  }\n\n  model: Student = new Student(\"\", parseInt(\"\"), \"\", '',  parseInt(\"\"))\n\n  onSubmit() {\n    this.studentService.addStudent(this.model.rollNumber, this.model.name, this.model.standard, this.model. age).subscribe(\n      (data:any) => {\n        console.log(data)\n        this.router.navigate(['/students']);\n      },\n      error => {\n        console.log(error)\n        this.errorMessage = error.error.errorMessage;\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h3 style=\\\"text-align: center; font-family: 'Times New Roman', Times, serif\\\">Student Tracking App</h3>\\n</div>\\n\\n<div class=\\\"container\\\">\\n    <thead style=\\\"align-items: center\\\" class=\\\"container\\\">\\n        <tr>\\n          <th><strong class=\\\"add\\\">Add new Student</strong></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr>\\n          <td>\\n            <button (click)=\\\"btnClick()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Add Student</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <br>\\n    <table class=\\\"table table-hover\\\">\\n        <thead class=\\\"thead-dark\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Roll Number</th>\\n            <th scope=\\\"col\\\">Standard</th>\\n            <th scope=\\\"col\\\">Age</th>\\n            <th scope=\\\"col\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let student of students$ | async; let i = index\\\">\\n              <th scope=\\\"row\\\">{{i+1}}</th>\\n              <td>{{student.name}}</td>\\n              <td>{{student.rollNumber}}</td>\\n              <td>{{student.standard}}</td>\\n              <td>{{student.age}}</td>\\n              <td><button class=\\\"btn btn-danger\\\" (click)=\\\"removeStudent(student.rollNumber)\\\">Delete</button></td>\\n\\n            </tr>\\n        </tbody>\\n      </table>\\n\\n</div>\\n<br>\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service'\nimport { Router } from '@angular/router';\n\nimport { Student } from '../models/Student'\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  public students$: Observable<Array<Student>>\n  constructor(public studentService: StudentService, public router: Router) { }\n\n  ngOnInit() {\n    this.students$ = this.studentService.getStudents()\n  }\n\n  btnClick() {\n    this.router.navigate(['/register']);\n  }\n\n  removeStudent(rollNumber: number) {\n    console.log(rollNumber)\n    this.studentService.deleteStudent(rollNumber).subscribe(\n      (data) => {\n        console.log(data)\n        this.students$ = this.studentService.getStudents()\n      },\n      error => console.log(error)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Student } from '../app/models/Student'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StudentService {\n\n  public obj: any\n\n  constructor(public http: HttpClient) { }\n\n  public baseUrl = \"api/\"\n\n  // Login User\n  loginUser(email: String, password: String) {\n      return this.http.post(this.baseUrl + \"users/login\", {email: email, password: password})\n  }\n\n\n  getStudents() {\n    return this.http.get<Student[]>(this.baseUrl+'students')\n  }\n\n  // register Student\n  addStudent(rollNumber: Number, name: String, standard: String, age: Number) {\n    return this.http.post<Student>(this.baseUrl+\"students\", {rollNumber: rollNumber, name: name, standard: standard, age: age})\n  }\n\n  // delete Student\n  deleteStudent(rollNumber: Number) {\n    return this.http.delete(this.baseUrl+\"students/\"+ rollNumber)\n  }\n\n  // admin register\n  addAdmin(name: String, email: String, password: String) {\n    return this.http.post(this.baseUrl+\"users/\" + \"register\", {name: name, email: email, password: password} )\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${this.auth.getToken()}`\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n\n","module.exports = \"\"","module.exports = \"\\n<br>\\n<br>\\n<h2 style=\\\"text-align: center\\\">Admin Registration</h2>\\n<br>\\n<br>\\n\\n<div class=\\\"container\\\">\\n    <form>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"emailr\\\"><strong>Email</strong>  </label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=email required [(ngModel)]=\\\"model.email\\\" #name=\\\"ngModel\\\" name=\\\"email\\\" placeholder=\\\"Enter Email\\\">\\n          </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\"> <strong>Name</strong>  </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\"><strong>Password</strong>  </label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=address [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" placeholder=\\\"Enter password\\\">\\n          </div>\\n        <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </form>\\n\\n        <br>\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\n          <strong>{{errorMessage}}</strong>\\n      </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudentService } from '../student.service'\nimport { User } from '../models/User'\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  constructor(public studentService: StudentService, public router: Router) { }\n\n  errorMessage: String\n\n  model: User = new User(\"\", \"\", \"\")\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.studentService.addAdmin(this.model.name, this.model.email, this.model.password).subscribe(\n      (data: User) => {\n        console.log(data)\n        this.router.navigate(['/login']);\n        console.log(\"Admin Added\")\n      },\n      error => {\n        console.log(error)\n        this.errorMessage = error.error.errorMessage;\n      }\n    )\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}